---
format: 
   revealjs:
      theme: ["../theme/q-theme.scss"]
      slide-number: c/t
      logo: POPUHEALSMPH_color-flush.png
      code-copy: true
      center-title-slide: false
      code-link: true
      code-overflow: wrap
      highlight-style: a11y
      height: 1080
      width: 1920
      chalkboard: true
      from: markdown+emoji
      fragment: true
      auto-stretch: false
execute: 
   eval: true
   echo: true
editor: 
  markdown: 
    wrap: 72
---

```{r load libraries, echo=F}
library(tidyverse)
library(ggdag)
library(dagitty)
library(gridExtra)
library(qrcode)
library(corrr)
library(lme4)
library(KMsurv)
library(survival)
data(larynx)
data(heart)
```

<h1>Lecture 11.2: Time-dependent covariates & time-varying regression coefficients</h1>

<h2>PHS 651: Advanced regression methods</h2>

<hr>

<h3>Mary Ryan Baumann, PhD</h3>

<h3>November 21, 2024</h3>

<br>

::: {style="font-size: 75%;"}
**Recording disclosure**

*This class is being conducted in person, as well as over [Zoom]{.alert}. As the instructor, I will be [recording]{.alert} this session. I have disabled the recording feature for others so that no one else will be able to record this session. I will be posting this session to the course’s website.*

*If you have privacy concerns and do not wish to appear in the recording, you may turn video off (click “stop video”) so that Zoom does not record you.*

*The chat box is always open for discussion and questions to the entire class. You may also send messages privately to the instructor. Please note that Zoom saves all chat transcripts.*
:::

::: {.absolute bottom=50 left=260 width=1500}

Slides found at: <https://maryryan.github.io/PHS-651-slides/PHS-651-11-2/slides-11-2>

:::

::: {.absolute bottom=0 left=100 width=150}
```{r qr code, echo=F, fig.height=2, fig.width=2}
plot(qr_code("https://maryryan.github.io/PHS-651-slides/PHS-651-11-2/slides-11-2"))
```
:::

---

## Recap: Cox model regression

Last time we introduced the [Cox model]{.alert}, which is a semi-parameteric proportional hazards regression that uses covariates to estimate a log-hazard:
$$\log\left[\lambda_i(t)\right] = \beta_0(t) + \beta_1 x_{i1} + \dots + \beta_k x_{ik}$$

- It is [semi-parametric]{.alert} because it leaves the baseline hazard $\beta_0(t)$ unspecified (only $\beta_1, \dots, \beta_k$ have parametric forms)

- $\beta$ is interpreted as a [log hazard ratio]{.alert} - but we usually like to interpret $e^\beta$ to get regular hazard ratios

. . .

Together with the [Breslow estimator]{.alert} of the baseline cumulative hazard, 

$$\hat \Lambda_{0B}(t) = \sum_{t_i \le t} \frac{d_i}{\sum_{j\in R(t_i)}\exp(\hat\beta_1 x_{j1} + \hat\beta_k x_{jk})}$$

we can use the coefficients from a Cox model to estimate the survival and hazard functions of individuals with specific covariate values, as well as probabilities of survival at particular timepoints

---

## Time-to-event regression data format

The data we use for these models usually includes 3 essential elements:

- Whether an individual experience an event (event indicator)

- The length of time we observed an individual (time)

- At least one covariate

If an individual experiences an event while we're observing them, the time variable will represent the time at which that event occurred (["event time"]{.alert})

If an individual does not experience an event while we're observing the, the time variable will represent the last timepoint at which we observed that individual (["censoring time"]{.alert})

```{r larynx}
#| output-location: column
larynx
```

---

## Time-to-event regression data format

If an individual experiences an event while we're observing them, the time variable will represent the time at which that event occurred (["event time"]{.alert})

If an individual does not experience an event while we're observing the, the time variable will represent the last timepoint at which we observed that individual (["censoring time"]{.alert})

```{r larynx3}
#| output-location: column
larynx
```

This is why when we code models for time to event endpoints, we "bundle" the time and event indicator variables together in the outcome:

:::: {.columns}
::: {.column width="50%"}
```{r cox ex, eval=F}
coxph( Surv(time, event) ~ covariate )
```
:::

::: {.column width="50%"}
```{sas cox ex2, eval=F}
PROC PHREG DATA=data;
  MODEL time*event(0) = covariate/ TIES=EFRON;
RUN;
```
:::
::::

---

## Time-dependent covariates

Note that in this data there is only 1 row per individual
```{r larynx2}
#| output-location: column
larynx
```

What happens if we were to collect a variable that [changes over time]{.alert}?

- Do we just include baseline value? Value at event/censoring time? Average value?

- None of these solutions is very satisfying... would be nice if we could just record how that variable changes like with repeated measures data

---

## Time-dependent covariates

Below is data on patients who are on the wait list for the Standard heart transplant program, where we want to see if receiving a transplant reduces hazard of death:
```{r heart subset,echo=F}
jasa_subset <-jasa %>% 
   select(-c("birth.dt", "hla.a2","mscore","reject","mismatch"))
```
```{r heart}
jasa_subset
```

- `transplant`: indicator for whether patient received a transplant

- `fustat`: indicator for whether patient is alive or dead

- `wait.time`: time to transplant since entering the program

- `futime`: total observation time (time to censoring or death)

[Whether someone receives a transplant or not is a variable that changes with time!]{.alert}

---

## Time-dependent covariates

Below is data on patients who are on the wait list for the Standard heart transplant program:
```{r heart2}
glimpse(jasa_subset)
```

Because transplant status changes with time, we need to transform this data into a new format in order to analyze it

- We call this new format the [counting process format]{.alert}, which has potentially [multiple rows]{.alert} for each individual

- Each row represents a [time interval]{.alert} that corresponds to a particular value for their time-dependent variable

- If they only have one row, that means none of the values for their covariates changed over the observation period

---

## Counting process format

Below is an example of what the heart transplant data would look like in counting process format:
```{r heart_long format, echo=F}
jasa2 <- cbind(1:nrow(jasa_subset), jasa_subset) #we need an identifier variable
colnames(jasa2)[1] <- "id"
tdata <- with(jasa2, data.frame(id = id,
   futime= pmax(.5, fu.date - accept.dt),
   txtime= ifelse(tx.date== fu.date,
   (tx.date -accept.dt) -.5,
   (tx.date - accept.dt)),
   fustat = fustat
   ))
xdata <- tmerge(jasa2, tdata, id=id,
   death = event(futime, fustat),
   transplant = tdc(txtime),
   options= list(idname="id"))

sdata <- tmerge(jasa2, tdata, id=id,
   death = event(futime, fustat),
   trt = tdc(txtime),
   options= list(idname="id"))
sdata <- sdata %>% 
   rename(fustat_ever=fustat,
          transplant_ever=transplant)
```
```{r heart_long}
sdata %>% 
   select(-c("accept.dt","tx.date","fu.date","futime","wait.time"))
```

- `tstart`, `tstop`: variables for the beginning and end of an observation interval

- `trt`: indicator for whether the patient is "on treatment" (has a transplaneted heart) in the interval

- `death`: whether the patient has died by the end of the interval

---

## Counting process format

Looking just at the people who received a transplant:

```{r heart_long treaters}
sdata %>% 
   select(-c("accept.dt","tx.date","fu.date","futime","wait.time")) %>% 
   filter(transplant_ever==1) 
```

With counting process format data, our time variable is now 2 separate variables: interval start time and interval stop time



---

## Time-dependent Cox model

To model this data, instead of just bundling together the event indicator and the event time, we'll bundle both start and stop times together with the event indicator:

```{r cox time}
time.cox <- coxph( Surv(tstart, tstop, death) ~ trt + age + surgery, data=sdata)
summary(time.cox)$coef
```

- $e^{\beta_1(trt)}=$ `r round(summary(time.cox)$coef[1,2],4)`: [A patient who had a transplant by any given time $t$ are expected to have a `r (round(summary(time.cox)$coef[1,2],4)-1)*100`% higher hazard of death compared to a non-transplant patient of similar age and prior surgery status (non-significant).]{.fragment}

. . .

Let's compare this to what the estimated model coefficients would look like if we weren't looking at transplant status as a time-varying coefficient:
```{r cox}
heart.cox <- coxph( Surv(futime, fustat) ~ transplant + age + surgery, data=jasa)
summary(heart.cox)$coef
```

- $e^{\beta_1(trt)}=$ `r round(summary(heart.cox)$coef[1,2],4)`: A patient who had a transplant are expected to have a `r (1-round(summary(heart.cox)$coef[1,2],4))*100`% *lower* hazard of death compared to a non-transplant patient of similar age and prior surgery status.

---

## Time-dependent Cox model

```{r cox time2, echo=F}
summary(time.cox)$coef
```

- $e^{\beta_1(trt)}=$ `r round(summary(time.cox)$coef[1,2],4)`: A patient who had a transplant by any given time $t$ are expected to have a `r (round(summary(time.cox)$coef[1,2],4)-1)*100`% [higher]{.alert} hazard of death compared to a non-transplant patient of similar age and prior surgery status (non-significant).

```{r cox2, echo=F}
summary(heart.cox)$coef
```

- $e^{\beta_1(trt)}=$ `r round(summary(heart.cox)$coef[1,2],4)`: A patient who had a transplant are expected to have a `r (1-round(summary(heart.cox)$coef[1,2],4))*100`% [lower]{.alert} hazard of death compared to a non-transplant patient of similar age and prior surgery status.

These are wildly different results! Why?

. . .

- In the non-time-dependent regression, transplant looks like it has such a large effect on time to death because the only people who receive transplants are those that live long enough to get them and likely judged to be "not too sick" to be able to benefit from them

---

## Time-varying coefficients

We may also be interested in whether the [effect]{.alert} of a covariate changes with time

- Known as a time-varying coefficient

This is a separate concept from time-dependent covariates

- Time-dependent covariates - covariate values can change, but the effect of a particular value is constant across time: $\log[\lambda_i(t)] = \beta_0(t) + \beta_k x_{ik}(t)$

- Time-varying coefficients - covariate value is fixed, but its effect varyings with time: $\log[\lambda_i(t)] = \beta_0(t) + \beta_k(t) x_{ik}$

. . . 

Time-varying coefficients are an example of [non-proportional hazards]{.alert}

- When we model a truly time-varying coefficient as time-static
$$\log[\lambda_i(t)] = \beta_0(t) + \beta_k x_{ik}$$
$e^{\beta_k}$ represents the hazard for $X_k$ averaged over time

- If the hazard at early times is very different from that at late times, the average may not be of interest to us

---

## Time-varying coefficients

We may also be interested in whether the [effect]{.alert} of a covariate changes with time

- Known as a time-varying coefficient

This is a separate concept from time-dependent covariates

- Time-dependent covariates - covariate values can change, but the effect of a particular value is constant across time: $\log[\lambda_i(t)] = \beta_0(t) + \beta_k x_{ik}(t)$

- Time-varying coefficients - covariate value is fixed, but its effect varyings with time: $\log[\lambda_i(t)] = \beta_0(t) + \beta_k(t) x_{ik}$


Time-varying coefficients are an example of [non-proportional hazards]{.alert}

- There are several ways we can formally look at this:

   - Schoenfeld residual plot for a covariate
   
   - Score test of correlation between a covariate's Schoenfeld residual and time

---

## Graphically assessing proportional hazards assumption

A [Schoenfeld residual]{.alert} is the difference between the covariate value for a subject and the weighted average of covariates in the risk set

- If the proportional hazards assumption holds and $\beta$ is the true regression coefficient, the residuals are uncorrelated and have mean zero

- If a covariate has a time-varying coefficent $\beta(t) = \beta + \gamma g(t)$, then we expect the scaled Schoenfeld residuals at a specific time will be $\gamma g(t)$

We usually [scale]{.alert} the Schoenfeld residuals by the weighted covariance matrix of $\hat \beta$

- If we plot the scaled Schoenfeld residuals for a covariate against time and see a trend, that indicates that we might have non-proportional hazards

---

## Schoenfeld residuals plot

For example, let's look at the laryngeal cancer data again

```{r larynx resid}
larynx.cox <- coxph( Surv(time, delta) ~ factor(stage) + age, data=larynx)
sresid <- residuals(larynx.cox, type="scaledsch")
time <- as.numeric( rownames( sresid ) )
sresid <- cbind(as.data.frame(sresid), time)

sresid %>% 
   ggplot(aes(x=time, y=age))+
   geom_point()+
   geom_smooth(se=F)+
   geom_hline(yintercept=0)+
   theme_minimal()

```

::: {.absolute bottom=250 right=50 width="40%"}
We might be seeing a slight pattern... Is there a way to formally test?
:::

---

## Testing proportional hazards assumption

Remember that if a covariate has a time-varying coefficent $\beta(t) = \beta + \gamma g(t)$, then we expect the scaled Schoenfeld residuals at a specific time will be $\gamma g(t)$

We can perform a hypothesis test for whether $\gamma=0$

- If we fail to reject, then we don't have strong evidence that the proportional hazards assumption is violated

- If we reject, then we have evidence that proportional hazards doesn't hold

. . .

```{r larynx zph}
cox.zph( larynx.cox, transform="identity" )
```

- Test indicates that we don't have strong evidence that proportional hazards is violated for either the disease stage or age variables

   - Could be that proportional hazards actually holds
   
   - Could be that we just don't have a large enough sample size to have the precision needed to detect it

---

## Testing proportional hazards assumption

Remember that if a covariate has a time-varying coefficent $\beta(t) = \beta + \gamma g(t)$, then we expect the scaled Schoenfeld residuals at a specific time will be $\gamma g(t)$

We can perform a hypothesis test for whether $\gamma=0$

- If we fail to reject, then we don't have strong evidence that the proportional hazards assumption is violated

- If we reject, then we have evidence that proportional hazards doesn't hold

We can also plot the `cox.zph()` object to get the Schoenfeld residual plots we made earlier:

```{r larynx zph2}
plot(cox.zph( larynx.cox, transform="identity" )[2])
```

---

## Time-varying coefficients

If we did have evidence of non-proportional hazards, we could incorporate time-varying coefficeints into our Cox model

We can think of time-varying coefficients as a sort of [interaction]{.alert} between covariate and time:
$$\log[\lambda_i(t)] = \beta_0(t) + \beta_k x_{ik} + \beta_I(x_{ik} \times \text{time}_i)$$

- Much like an exposure-by-time interaction in longitudinal GEEs and GLMMs, but the main-effect for time is absorbed into $\beta_0(t)$

---

## Time-varying coefficients

We can think of time-varying coefficients as a sort of [interaction]{.alert} between covariate and time:

$$\log[\lambda_i(t)] = \beta_0(t) + \beta_k x_{ik} + \beta_t(x_{ik} \times \text{time}_i)$$

There are different ways to interact time with a covariate $X_k$. You might consider:

- Linear time: $\log[\lambda_i(t)] = \beta_0(t) + \beta_k x_{ik} + \beta_t(x_{ik} \times \text{time}_i)$

- Log time: $\log[\lambda_i(t)] = \beta_0(t) + \beta_k x_{ik} + \beta_t(x_{ik} \times \log[\text{time}_i])$ [It's common to go with log time]{.fragment .alert}

- Categorical time:
$$\begin{align*}\log[\lambda_i(t)] = &\beta_0(t) + \beta_k x_{ik} + \beta_{t1}(x_{ik} \times I(0 <\text{time}_i \le t_1)])\\
&+ \beta_{t2}(x_{ik} \times I(t_1 <\text{time}_i \le t_2)]) + \dots + \beta_{tp}(x_{ik} \times I(t_{p-1} <\text{time}_i \le t_p)])\end{align*}$$

---

## Time-varying coefficients

When adding time-varying coefficients to a Cox model, it's not just interacting a covariate with someone's end survival time -- it's interacting the covariate with [each unit of time in the observation window]{.alert}

- This is essentially putting the data in counting process format, but each time interval is the length 1 unit on the time scale (e.g., 1 day)

- This makes for an enormous dataset, and fitting these models can be very computationally intensive

. . .

In R, there is a slightly easier way to do this via the time-transform argument in the `coxph()` function

```{r varying}
summary( coxph( Surv(tstart, tstop, death) ~ age + surgery + trt + tt(trt), data=sdata,
                tt=function(x,t, ...) x * log(t+1)) )$coef
```

---

## Time-varying coefficients

When time-varying coefficents are added, it's most help to compare individuals at 2 different time points such as $time=1$ and $time=365$ ) to understand how the hazard ratio changes with time

```{r contrasts}
heart.tt <- coxph( Surv(tstart, tstop, death) ~ age + surgery + trt + tt(trt), data=sdata,
                tt=function(x,t, ...) x * log(t+1))

time1 <- c(0,0,1,log(1))
time365 <- c(0,0,1,log(365))

time1.exp <- exp(t(summary(heart.tt)$coef[,1]) %*% time1)
time365.exp <- exp(t(summary(heart.tt)$coef[,1]) %*% time365)
```

Ignoring the fact that neither the transplant nor the time-varying coefficients were statistically significant...

- $e^{\beta_{trt}(1) +\beta_{tt}(1\times \log(1))}$: `r round(time1.exp, 4)`

- $e^{\beta_{trt}(1) +\beta_{tt}(1\times \log(365))}$: `r round(time365.exp, 4)`

The hazard for death for heart transplant patients is high early in time, but reduces later on
