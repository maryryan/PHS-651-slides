---
title: "Count GLMM"
format: revealjs
editor: visual
---

## Count outcomes and GLMMs (poisson)

We've focused a lot on binary outcomes up until now, but count data (Poisson-distributed) can also be modeled using a GLMM

- If we have $\vec{Y}_i$ that is distributed Poisson with event rate $\lambda_{ij}$ (# events per unit of time)

   - Thus the mean for $Y_{ij}$, $E[Y_{ij}|\boldsymbol{X}_i, b_{0i}] = \mu_{ij}$, is the average count for a given unit of time, which is $\mu_{ij}= \lambda_{ij}T_{ij}$

- We want to know what effect exposure $U_{ij}$ has on $\vec{Y}_i$

[What would our model look like?]{.alert}

$$\text{log}(Y_{ij}) = \beta_0 + U_{ij}\beta_1 + Z_i b_{0i} + \log(T_{ij})$$

where $b_{0i} \sim N(0, \sigma^2_b)$

. . .

[Note the lack of $\epsilon_{ij}$!]{.alert}

- This is because the Poisson distribution assumes $E[Y_{ij}|\boldsymbol{X}_i, b_{0i}] = Var[Y_{ij}|\boldsymbol{X}_i, b_{0i}] = \mu_{ij}$

   - However, this assumption is rarely true in real life (health) applications

   - Often, $Var[Y|\boldsymbol{X}_i, b_{0i}]>E[Y|\boldsymbol{X}_i, b_{0i}]$, known as [over-dispersion]{.alert}

```{r glmm poisson, eval=F, echo=F}
glmmPQL( y ~ u,
         random = ~ 1 | cluster, family = quasipoisson(link="log"),
         data=data)
```

---

## Count outcomes and GLMMs (negative binomial)

When count data are over-dispersed, we can use a [negative-binomial]{.alert} regression model

$$\text{log}(Y_{ij}) = \beta_0 + U_{ij}\beta_1 + Z_i b_{0i} + \log(T_{ij}) + \epsilon_{ij}$$

where $b_{0i}\sim N(0,\sigma^2_b)$ and $\exp(\epsilon_{ij}) \sim \text{Gamma}(1,\theta)$

. . .

- This means $Var(Y_{ij}|\boldsymbol{X}_i, b_{0i}) = E[Y_{ij}|\boldsymbol{X}_i, b_{0i}] + \theta\left(E[Y_{ij}|\boldsymbol{X}_i, b_{0i}]\right)^2 = \mu_{ij} + \theta \mu_{ij}^2$ 

- Our covariance structure then looks like 

$$\begin{bmatrix}
\sigma^2_b + \mu_{ij} + \theta \mu_{ij}^2 & \sigma^2_b & \dots & \sigma^2_b\\
\sigma^2_b & \ddots & \dots & \sigma^2_b\\
\vdots & \dots & \ddots & \vdots\\
\sigma^2_b & \dots & \sigma^2_b & \sigma^2_b + \mu_{ij} + \theta \mu_{ij}^2
\end{bmatrix}$$
```{r glmm neg bin, eval=F, echo=F}
glmmPQL( y ~ u,
         random = ~ 1 | cluster, family = negative.binomial(theta = 1),
         data=data)
```

---

## Example: murders and income

Let's say we want to see whether the real per capita personal income of a county impacts its number of murders

- Data from 1980

- Assume clustering by state

```{r murder cleaning, echo=F}
library(wooldridge)

murder <- countymurders %>% 
   dplyr::filter(year==1980)
```

---

## Example: murders and income

Let's get an idea of our data...

```{r murder table 1}
murder %>% 
   group_by(statefips) %>% 
   summarize(n=n(), mean_murders=mean(murders, na.rm=T), mean_capita = mean(rpcpersinc))
```

---

## Example: murders and income

First our Poisson mixed effects model:

$$\text{log}(\text{number of murders}_{ij}) = \beta_0 + \beta_1(\text{per capita personal income}_{ij}) + b_{0i}$$

- All data is on the per-year scale so $T_{ij}=1$, and $\log(T_{ij})=0$, so no need to add the time offset term

```{r murder glmm}
murder_glmm <- glmmPQL( murders ~ rpcpersinc,
         random = ~ 1 | statefips, family = quasipoisson(link="log"), data = murder, 
         verbose = F )
summary( murder_glmm )$tTable

```

Poisson GLMM results:

- Poisson $e^{\beta_1}$: `r round(exp(murder_glmm$coefficients$fixed[2]), 4)`

   - 95% CI: (`r round(exp(murder_glmm$coefficients$fixed[2] - summary(murder_glmm)$tTable[2,2]*pnorm(0.975)), 4)`, `r round(exp(murder_glmm$coefficients$fixed[2] + summary(murder_glmm)$tTable[2,2]*pnorm(0.975)), 4)`)
   
---

## Example: murders and income

Now our negative binomial mixed effects model:

$$\text{log}(\text{number of murders}_{ij}) = \beta_0 + \beta_1(\text{per capita personal income}_{ij}) + b_{0i} + \epsilon_{ij}$$

```{r murder glmmnb}
# find theta #
murder_theta <- glm.nb(murders ~ rpcpersinc, data=murder)$call$init.theta

# fit model #
murder_glmmnb <- glmmPQL( murders ~ rpcpersinc,
         random = ~ 1 | statefips, family = negative.binomial(theta = murder_theta), data = murder, 
         verbose = F )
summary( murder_glmmnb )$tTable

```

Negative Binomial GLMM results:

- NB $e^{\beta_1}$: `r round(exp(murder_glmmnb$coefficients$fixed[2]), 4)`

   - 95% CI: (`r round(exp(murder_glmmnb$coefficients$fixed[2] - summary(murder_glmmnb)$tTable[2,2]*pnorm(0.975)), 4)`, `r round(exp(murder_glmmnb$coefficients$fixed[2] + summary(murder_glmmnb)$tTable[2,2]*pnorm(0.975)), 4)`)